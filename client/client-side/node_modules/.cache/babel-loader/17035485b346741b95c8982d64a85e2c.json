{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaizmailov/ml/wager_api/client/client-side/src/components_js/formUser.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayerForm(props) {\n  _s();\n\n  const [newWager, setNewWagers] = useState({\n    username: \"\",\n    game_type: \"\",\n    website: \"\",\n    description: \"\",\n    wager_value: 0,\n    currency: \"USD\",\n    isOnline: true,\n    isCompleted: false\n  });\n  const [wagers, setWagers] = useState([{\n    username: \"JokerrNikita\",\n    game_type: \"Chess\",\n    website: \"Chess.com\",\n    description: \"1 game, 3 minute + 1 second addon.\",\n    wager_value: 5,\n    currency: \"USD\",\n    isOnline: true,\n    isCompleted: false\n  }]);\n\n  function toggleTodoCompleteAtIndex(index) {\n    const temporaryWagers = [...wagers];\n    temporaryWagers[index].isCompleted = !temporaryWagers[index].isCompleted;\n    setWagers(temporaryWagers);\n  }\n\n  function handleChange(e) {\n    setNewWagers( // Computed property names\n    // keys of the objects are computed dynamically\n    [e.target.name]);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const allWagers = [...wagers];\n    allWagers.concat(newWager);\n    setWagers(allWagers);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formApp\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"wager-list\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"form-ul-wager-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `todo`,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Your in-game username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newWager.username,\n              name: \"username\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Choose game genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newWager.game_type,\n              name: \"game_type\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Website of the game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newWager.website,\n              name: \"website\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description of the wager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newWager.description,\n              name: \"description\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Wager value (how much you need to bet. The owner of the challenge already deposited money for it.)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: newWager.wager_value,\n              name: \"wager_value\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newWager.currency,\n              name: \"currency\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Add a Wager!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), wagers.map((wager, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `todo ${wager.isCompleted && 'todo-is-completed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'checkbox',\n        onClick: () => toggleTodoCompleteAtIndex(index),\n        children: wager.isCompleted && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2714\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: wager.username\n      }, wager.username, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: wager.game_type\n      }, wager.game_type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: wager.description\n      }, wager.description, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: wager.website\n      }, wager.website, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: wager.wager_value\n      }, wager.wager_value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: wager.currency\n      }, wager.currency, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n} // function Clicker(props) {\n//     const [count, setCount] = useState(0);\n//     const handleEvent = (event) => {\n//         setCount(count + 1)\n//     }\n//     // this is what is going to be rendered\n//     return (\n//         <div>\n//             <p>Вы кликнули {count} раз</p>\n//             <button onClick={handleEvent}>\n//                 Нажми на меня\n//             </button>\n//         </div>\n//     )\n// }\n// function NameDisplayer(props) {\n//     const [titleName, setTitle] = useState(\"Change Me!\");\n//     const handleChange = (event) => {\n//         setTitle(event.target.value);\n//     }\n//     return (\n//         <div>\n//             <h1>\n//                 Привет, {titleName}\n//             </h1>\n//             <input value={titleName} name=\"titleName\" onChange={handleChange}/>\n//         </div>\n//     )\n// }\n\n\n_s(PlayerForm, \"cfBGt9WVu8fExOKD/mCs21Ona4M=\");\n\n_c = PlayerForm;\nexport { PlayerForm };\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerForm\");","map":{"version":3,"sources":["/Users/nikitaizmailov/ml/wager_api/client/client-side/src/components_js/formUser.jsx"],"names":["React","useState","useEffect","useContext","PlayerForm","props","newWager","setNewWagers","username","game_type","website","description","wager_value","currency","isOnline","isCompleted","wagers","setWagers","toggleTodoCompleteAtIndex","index","temporaryWagers","handleChange","e","target","name","handleSubmit","preventDefault","allWagers","concat","map","wager"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\"\n\nfunction PlayerForm(props) {\n    \n    const [newWager, setNewWagers] = useState({\n        username: \"\",\n        game_type: \"\",\n        website: \"\",\n        description: \"\",\n        wager_value: 0,\n        currency: \"USD\",\n        isOnline: true,\n        isCompleted: false\n    })\n    const [wagers, setWagers] = useState([\n        {\n            username: \"JokerrNikita\",\n            game_type: \"Chess\",\n            website: \"Chess.com\",\n            description: \"1 game, 3 minute + 1 second addon.\",\n            wager_value: 5,\n            currency: \"USD\",\n            isOnline: true,\n            isCompleted: false\n        },\n    ])\n\n    function toggleTodoCompleteAtIndex(index) {\n        const temporaryWagers = [...wagers];\n        temporaryWagers[index].isCompleted = !temporaryWagers[index].isCompleted;\n        setWagers(temporaryWagers);\n    }\n\n    function handleChange(e) {\n        setNewWagers(\n            // Computed property names\n            // keys of the objects are computed dynamically\n            ([e.target.name] : e.target.value)\n        )\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const allWagers = [...wagers];\n        allWagers.concat(newWager);\n        setWagers(allWagers);\n\n    }\n\n    return (\n        <div className=\"formApp\">\n            <form className=\"wager-list\" onSubmit={handleSubmit}>\n                <ul className='form-ul-wager-list'>\n                    <div className={`todo`}>\n                        <li>\n                            <label>Your in-game username</label>\n                            <input\n                            type=\"text\"\n                            value={newWager.username}\n                            name=\"username\"\n                            onChange={handleChange}\n                            />\n                        </li>\n                        <li>\n                            <label>Choose game genre</label>\n                            <input\n                            type=\"text\"\n                            value={newWager.game_type}\n                            name=\"game_type\"\n                            onChange={handleChange}\n                            />\n                        </li>\n                        <li>\n                            <label>Website of the game</label>\n                            <input\n                            type=\"text\"\n                            value={newWager.website}\n                            name=\"website\"\n                            onChange={handleChange}\n                            />\n                        </li>\n                        <li>\n                            <label>Description of the wager</label>\n                            <input\n                            type=\"text\"\n                            value={newWager.description}\n                            name=\"description\"\n                            onChange={handleChange}\n                            />\n                        </li>\n                        <li>\n                            <label>Wager value (how much you need to bet. The owner of the challenge already deposited money for it.)</label>\n                            <input\n                            type=\"number\"\n                            value={newWager.wager_value}\n                            name=\"wager_value\"\n                            onChange={handleChange}\n                            />\n                        </li>\n                        <li>\n                            <label>Currency</label>\n                            <input\n                            type=\"text\"\n                            value={newWager.currency}\n                            name=\"currency\"\n                            onChange={handleChange}\n                            />\n                        </li>\n                        <div>\n                            <button>\n                                Add a Wager!\n                            </button>\n                        </div>\n                    </div>\n                </ul>\n            </form>\n            {wagers.map((wager, index) => (\n            <div className={`todo ${wager.isCompleted && 'todo-is-completed'}`}>\n                <div className={'checkbox'} onClick={() => toggleTodoCompleteAtIndex(index)}>\n                {wager.isCompleted && (<span>&#x2714;</span>)}\n                </div>\n                <li key={wager.username}>\n                    {wager.username}\n                </li>\n                <li key={wager.game_type}>\n                    {wager.game_type}\n                </li>\n                <li key={wager.description}>\n                    {wager.description}\n                </li>\n                <li key={wager.website}>\n                    {wager.website}\n                </li>\n                <li key={wager.wager_value}>\n                    {wager.wager_value}\n                </li>\n                <li key={wager.currency}>\n                    {wager.currency}\n                </li>\n            </div>\n        ))}\n        </div>\n    )\n\n}\n\n\n\n\n// function Clicker(props) {\n//     const [count, setCount] = useState(0);\n\n//     const handleEvent = (event) => {\n//         setCount(count + 1)\n//     }\n\n//     // this is what is going to be rendered\n//     return (\n//         <div>\n//             <p>Вы кликнули {count} раз</p>\n//             <button onClick={handleEvent}>\n//                 Нажми на меня\n//             </button>\n//         </div>\n//     )\n// }\n\n// function NameDisplayer(props) {\n\n//     const [titleName, setTitle] = useState(\"Change Me!\");\n\n//     const handleChange = (event) => {\n//         setTitle(event.target.value);\n//     }\n\n//     return (\n//         <div>\n//             <h1>\n//                 Привет, {titleName}\n//             </h1>\n//             <input value={titleName} name=\"titleName\" onChange={handleChange}/>\n//         </div>\n//     )\n// }\n\nexport {PlayerForm}"]},"metadata":{},"sourceType":"module"}